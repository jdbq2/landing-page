{"id":"../node_modules/easy/lib/miscellaneous/bounds.js","dependencies":[{"name":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\package.json","includedInParent":true,"mtime":1599575481889},{"name":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\node_modules\\easy\\package.json","includedInParent":true,"mtime":1599575480689}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Bounds = /*#__PURE__*/function () {\n  function Bounds(top, left, bottom, right) {\n    _classCallCheck(this, Bounds);\n\n    this.top = top;\n    this.left = left;\n    this.bottom = bottom;\n    this.right = right;\n  }\n\n  _createClass(Bounds, [{\n    key: \"getTop\",\n    value: function getTop() {\n      return this.top;\n    }\n  }, {\n    key: \"getLeft\",\n    value: function getLeft() {\n      return this.left;\n    }\n  }, {\n    key: \"getBottom\",\n    value: function getBottom() {\n      return this.bottom;\n    }\n  }, {\n    key: \"getRight\",\n    value: function getRight() {\n      return this.right;\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth() {\n      var width = this.right - this.left;\n      return width;\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight() {\n      var height = this.bottom - this.top;\n      return height;\n    }\n  }, {\n    key: \"setTop\",\n    value: function setTop(top) {\n      this.top = top;\n    }\n  }, {\n    key: \"setLeft\",\n    value: function setLeft(left) {\n      this.left = left;\n    }\n  }, {\n    key: \"setBottom\",\n    value: function setBottom(bottom) {\n      this.bottom = bottom;\n    }\n  }, {\n    key: \"setRight\",\n    value: function setRight(right) {\n      this.right = right;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift(horizontalOffset, verticalOffset) {\n      this.top += verticalOffset;\n      this.left += horizontalOffset;\n      this.bottom += verticalOffset;\n      this.right += horizontalOffset;\n    }\n  }, {\n    key: \"isOverlappingMouse\",\n    value: function isOverlappingMouse(mouseTop, mouseLeft) {\n      return this.top < mouseTop && this.left < mouseLeft && this.bottom > mouseTop && this.right > mouseLeft;\n    }\n  }, {\n    key: \"areOverlapping\",\n    value: function areOverlapping(bounds) {\n      return this.top < bounds.bottom && this.left < bounds.right && this.bottom > bounds.top && this.right > bounds.left;\n    }\n  }], [{\n    key: \"fromBoundingClientRect\",\n    value: function fromBoundingClientRect(boundingClientRect) {\n      var windowScrollTop = window.pageYOffset,\n          ///\n      windowScrollLeft = window.pageXOffset,\n          ///\n      top = boundingClientRect.top + windowScrollTop,\n          left = boundingClientRect.left + windowScrollLeft,\n          bottom = boundingClientRect.bottom + windowScrollTop,\n          right = boundingClientRect.right + windowScrollLeft,\n          bounds = new Bounds(top, left, bottom, right);\n      return bounds;\n    }\n  }, {\n    key: \"fromTopLeftWidthAndHeight\",\n    value: function fromTopLeftWidthAndHeight(top, left, width, height) {\n      var bottom = top + height,\n          right = left + width,\n          bounds = new Bounds(top, left, bottom, right);\n      return bounds;\n    }\n  }]);\n\n  return Bounds;\n}();\n\nexports[\"default\"] = Bounds;\n"},"sourceMaps":{"js":{"version":3,"sources":["bounds.js"],"names":["Bounds","top","left","bottom","right","width","height","horizontalOffset","verticalOffset","mouseTop","mouseLeft","bounds","boundingClientRect","windowScrollTop","window","pageYOffset","windowScrollLeft","pageXOffset"],"mappings":"AAAA;;;;;;;;;;;;;IAEqBA,M;AACnB,kBAAYC,GAAZ,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;AAAA;;AACpC,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;;;;6BAEQ;AACP,aAAO,KAAKH,GAAZ;AACD;;;8BAES;AACR,aAAO,KAAKC,IAAZ;AACD;;;gCAEW;AACV,aAAO,KAAKC,MAAZ;AACD;;;+BAEU;AACT,aAAO,KAAKC,KAAZ;AACD;;;+BAEU;AACT,UAAMC,KAAK,GAAG,KAAKD,KAAL,GAAa,KAAKF,IAAhC;AAEA,aAAOG,KAAP;AACD;;;gCAEW;AACV,UAAMC,MAAM,GAAG,KAAKH,MAAL,GAAc,KAAKF,GAAlC;AAEA,aAAOK,MAAP;AACD;;;2BAEML,G,EAAK;AACV,WAAKA,GAAL,GAAWA,GAAX;AACD;;;4BAEOC,I,EAAM;AACZ,WAAKA,IAAL,GAAYA,IAAZ;AACD;;;8BAESC,M,EAAQ;AAChB,WAAKA,MAAL,GAAcA,MAAd;AACD;;;6BAEQC,K,EAAO;AACd,WAAKA,KAAL,GAAaA,KAAb;AACD;;;0BAEKG,gB,EAAkBC,c,EAAgB;AACtC,WAAKP,GAAL,IAAYO,cAAZ;AACA,WAAKN,IAAL,IAAaK,gBAAb;AACA,WAAKJ,MAAL,IAAeK,cAAf;AACA,WAAKJ,KAAL,IAAcG,gBAAd;AACD;;;uCAEkBE,Q,EAAUC,S,EAAW;AACtC,aAAW,KAAKT,GAAL,GAAWQ,QAAZ,IACC,KAAKP,IAAL,GAAYQ,SADb,IAEC,KAAKP,MAAL,GAAcM,QAFf,IAGC,KAAKL,KAAL,GAAaM,SAHxB;AAID;;;mCAEcC,M,EAAQ;AACrB,aAAW,KAAKV,GAAL,GAAWU,MAAM,CAACR,MAAnB,IACC,KAAKD,IAAL,GAAYS,MAAM,CAACP,KADpB,IAEC,KAAKD,MAAL,GAAcQ,MAAM,CAACV,GAFtB,IAGC,KAAKG,KAAL,GAAaO,MAAM,CAACT,IAH/B;AAID;;;2CAE6BU,kB,EAAoB;AAChD,UAAMC,eAAe,GAAGC,MAAM,CAACC,WAA/B;AAAA,UAA4C;AACtCC,MAAAA,gBAAgB,GAAGF,MAAM,CAACG,WADhC;AAAA,UAC8C;AACxChB,MAAAA,GAAG,GAAGW,kBAAkB,CAACX,GAAnB,GAAyBY,eAFrC;AAAA,UAGMX,IAAI,GAAGU,kBAAkB,CAACV,IAAnB,GAA0Bc,gBAHvC;AAAA,UAIMb,MAAM,GAAGS,kBAAkB,CAACT,MAAnB,GAA4BU,eAJ3C;AAAA,UAKMT,KAAK,GAAGQ,kBAAkB,CAACR,KAAnB,GAA2BY,gBALzC;AAAA,UAMML,MAAM,GAAG,IAAIX,MAAJ,CAAWC,GAAX,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,CANf;AAQA,aAAOO,MAAP;AACD;;;8CAEgCV,G,EAAKC,I,EAAMG,K,EAAOC,M,EAAQ;AACzD,UAAMH,MAAM,GAAGF,GAAG,GAAGK,MAArB;AAAA,UACMF,KAAK,GAAGF,IAAI,GAAGG,KADrB;AAAA,UAEMM,MAAM,GAAG,IAAIX,MAAJ,CAAWC,GAAX,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,KAA9B,CAFf;AAIA,aAAOO,MAAP;AACD","sourcesContent":["\"use strict\";\n\nexport default class Bounds {\n  constructor(top, left, bottom, right) {\n    this.top = top;\n    this.left = left;\n    this.bottom = bottom;\n    this.right = right;\n  }\n\n  getTop() {\n    return this.top;\n  }\n\n  getLeft() {\n    return this.left;\n  }\n\n  getBottom() {\n    return this.bottom;\n  }\n\n  getRight() {\n    return this.right;\n  }\n\n  getWidth() {\n    const width = this.right - this.left;\n\n    return width;\n  }\n\n  getHeight() {\n    const height = this.bottom - this.top;\n\n    return height;\n  }\n  \n  setTop(top) {\n    this.top = top;\n  }\n\n  setLeft(left) {\n    this.left = left;\n  }\n\n  setBottom(bottom) {\n    this.bottom = bottom;\n  }\n\n  setRight(right) {\n    this.right = right;\n  }\n\n  shift(horizontalOffset, verticalOffset) {\n    this.top += verticalOffset;\n    this.left += horizontalOffset;\n    this.bottom += verticalOffset;\n    this.right += horizontalOffset;\n  }\n\n  isOverlappingMouse(mouseTop, mouseLeft) {\n    return (  (this.top < mouseTop)\n           && (this.left < mouseLeft)\n           && (this.bottom > mouseTop)\n           && (this.right > mouseLeft)  );\n  }\n\n  areOverlapping(bounds) {\n    return (  (this.top < bounds.bottom)\n           && (this.left < bounds.right)\n           && (this.bottom > bounds.top)\n           && (this.right > bounds.left)  );\n  }\n\n  static fromBoundingClientRect(boundingClientRect) {\n    const windowScrollTop = window.pageYOffset, ///\n          windowScrollLeft = window.pageXOffset,  ///\n          top = boundingClientRect.top + windowScrollTop,\n          left = boundingClientRect.left + windowScrollLeft,\n          bottom = boundingClientRect.bottom + windowScrollTop,\n          right = boundingClientRect.right + windowScrollLeft,\n          bounds = new Bounds(top, left, bottom, right);\n\n    return bounds;\n  }\n\n  static fromTopLeftWidthAndHeight(top, left, width, height) {\n    const bottom = top + height,\n          right = left + width,\n          bounds = new Bounds(top, left, bottom, right);\n\n    return bounds;\n  }\n}\n"]}},"error":null,"hash":"917abfb0b03dc9917573f3f62e7b0a9c","cacheData":{"env":{}}}