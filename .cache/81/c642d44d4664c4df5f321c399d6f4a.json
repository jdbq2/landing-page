{"id":"../node_modules/easy/lib/mixins/event.js","dependencies":[{"name":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\package.json","includedInParent":true,"mtime":1599575481889},{"name":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\node_modules\\easy\\package.json","includedInParent":true,"mtime":1599575480689},{"name":"./resize","loc":{"line":8,"column":22},"parent":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\node_modules\\easy\\lib\\mixins\\event.js","resolved":"C:\\Users\\Juan Diego\\Desktop\\landing_page\\node_modules\\easy\\lib\\mixins\\resize.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _resize = require(\"./resize\");\n\nfunction on(eventTypes, handler, element) {\n  var _this = this;\n\n  eventTypes = eventTypes.split(\" \"); ///\n\n  eventTypes.forEach(function (eventType) {\n    if (eventType === \"resize\") {\n      var resizeEventListeners = _this.findEventListeners(\"resize\"),\n          resizeEventListenersLength = resizeEventListeners.length;\n\n      if (resizeEventListenersLength === 0) {\n        _this.addResizeObject();\n      }\n    }\n\n    var eventListener = _this.addEventListener(eventType, handler, element);\n\n    _this.domElement.addEventListener(eventType, eventListener);\n  });\n}\n\nfunction off(eventTypes, handler, element) {\n  var _this2 = this;\n\n  eventTypes = eventTypes.split(\" \"); ///\n\n  eventTypes.forEach(function (eventType) {\n    var eventListener = _this2.removeEventListener(eventType, handler, element);\n\n    _this2.domElement.removeEventListener(eventType, eventListener);\n\n    if (eventType === \"resize\") {\n      var resizeEventListeners = _this2.findEventListeners(\"resize\"),\n          resizeEventListenersLength = resizeEventListeners.length;\n\n      if (resizeEventListenersLength === 0) {\n        (0, _resize.removeResizeObject)(_this2);\n      }\n    }\n  });\n}\n\nfunction addEventListener(eventType, handler) {\n  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;\n\n  if (!this.hasOwnProperty(\"eventListeners\")) {\n    this.eventListeners = [];\n  }\n\n  var eventListener = createEventListener(eventType, handler, element);\n  this.eventListeners.push(eventListener);\n  return eventListener;\n}\n\nfunction removeEventListener(eventType, handler) {\n  var element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this;\n  var eventListener = this.findEventListener(eventType, handler, element),\n      index = this.eventListeners.indexOf(eventListener),\n      start = index,\n      ///\n  deleteCount = 1;\n  this.eventListeners.splice(start, deleteCount);\n\n  if (this.eventListeners.length === 0) {\n    delete this.eventListeners;\n  }\n\n  return eventListener;\n}\n\nfunction findEventListener(eventType, handler, element) {\n  var eventListener = this.eventListeners.find(function (eventListener) {\n    var found = eventListener.element === element && eventListener.handler === handler && eventListener.eventType === eventType;\n\n    if (found) {\n      return true;\n    }\n  });\n  return eventListener;\n}\n\nfunction findEventListeners(eventType) {\n  var eventListeners = [];\n\n  if (this.hasOwnProperty(\"eventListeners\")) {\n    this.eventListeners.forEach(function (eventListener) {\n      var found = eventListener.eventType === eventType;\n\n      if (found) {\n        eventListeners.push(eventListener);\n      }\n    });\n  }\n\n  return eventListeners;\n}\n\nfunction createEventListener(eventType, handler, element) {\n  var eventListener;\n\n  eventListener = function eventListener(event) {\n    handler.call(element, event, element);\n  };\n\n  Object.assign(eventListener, {\n    element: element,\n    handler: handler,\n    eventType: eventType\n  });\n  return eventListener;\n}\n\nvar eventMixins = {\n  on: on,\n  off: off,\n  addEventListener: addEventListener,\n  removeEventListener: removeEventListener,\n  findEventListener: findEventListener,\n  findEventListeners: findEventListeners\n};\nvar _default = eventMixins;\nexports[\"default\"] = _default;\n"},"sourceMaps":{"js":{"version":3,"sources":["event.js"],"names":["on","eventTypes","handler","element","split","forEach","eventType","resizeEventListeners","findEventListeners","resizeEventListenersLength","length","addResizeObject","eventListener","addEventListener","domElement","off","removeEventListener","hasOwnProperty","eventListeners","createEventListener","push","findEventListener","index","indexOf","start","deleteCount","splice","find","found","event","call","Object","assign","eventMixins"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport {removeResizeObject} from \"./resize\";\n\nfunction on(eventTypes, handler, element) {\n  eventTypes = eventTypes.split(\" \"); ///\n\n  eventTypes.forEach((eventType) => {\n    if (eventType === \"resize\") {\n      const resizeEventListeners = this.findEventListeners(\"resize\"),\n            resizeEventListenersLength = resizeEventListeners.length;\n\n      if (resizeEventListenersLength === 0) {\n        this.addResizeObject();\n      }\n    }\n\n    const eventListener = this.addEventListener(eventType, handler, element);\n\n    this.domElement.addEventListener(eventType, eventListener);\n  });\n}\n\nfunction off(eventTypes, handler, element) {\n  eventTypes = eventTypes.split(\" \"); ///\n\n  eventTypes.forEach((eventType) => {\n    const eventListener = this.removeEventListener(eventType, handler, element);\n\n    this.domElement.removeEventListener(eventType, eventListener);\n\n    if (eventType === \"resize\") {\n      const resizeEventListeners = this.findEventListeners(\"resize\"),\n            resizeEventListenersLength = resizeEventListeners.length;\n\n      if (resizeEventListenersLength === 0) {\n        removeResizeObject(this);\n      }\n    }\n  });\n}\n\nfunction addEventListener(eventType, handler, element = this) {\n  if (!this.hasOwnProperty(\"eventListeners\")) {\n    this.eventListeners = [];\n  }\n\n  const eventListener = createEventListener(eventType, handler, element);\n\n  this.eventListeners.push(eventListener);\n\n  return eventListener;\n}\n\nfunction removeEventListener(eventType, handler, element = this) {\n  const eventListener = this.findEventListener(eventType, handler, element),\n        index = this.eventListeners.indexOf(eventListener),\n        start = index,  ///\n        deleteCount = 1;\n\n  this.eventListeners.splice(start, deleteCount);\n\n  if (this.eventListeners.length === 0) {\n    delete this.eventListeners;\n  }\n\n  return eventListener;\n}\n\nfunction findEventListener(eventType, handler, element) {\n  const eventListener = this.eventListeners.find((eventListener) => {\n    const found = ( (eventListener.element === element) &&\n                    (eventListener.handler === handler) &&\n                    (eventListener.eventType === eventType) );\n\n    if (found) {\n      return true;\n    }\n  });\n\n  return eventListener;\n}\n\nfunction findEventListeners(eventType) {\n  const eventListeners = [];\n\n  if (this.hasOwnProperty(\"eventListeners\")) {\n    this.eventListeners.forEach((eventListener) => {\n      const found = (eventListener.eventType === eventType);\n\n      if (found) {\n        eventListeners.push(eventListener);\n      }\n    });\n  }\n\n  return eventListeners;\n}\n\nfunction createEventListener(eventType, handler, element) {\n  let eventListener;\n\n  eventListener = (event) => {\n    handler.call(element, event, element)\n  };\n\n  Object.assign(eventListener, {\n    element,\n    handler,\n    eventType\n  });\n\n  return eventListener;\n}\n\nconst eventMixins = {\n  on,\n  off,\n  addEventListener,\n  removeEventListener,\n  findEventListener,\n  findEventListeners\n};\n\nexport default eventMixins;\n"]}},"error":null,"hash":"f08a39cb6bf5bb84ab9ea81449179a35","cacheData":{"env":{}}}